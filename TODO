Legend:
SPEC!!	- Not specified
SPEC	- Spec not finalized
	- Not done
	* Top priority
	. Partially done
	o Done

NEEDS TO BE WRITTEN

FOR 0.0.1: (The rough edges release)
	. Module system
		o Stub classes
		o Modules are configurable
		. Modules are loadable
			o Implement
			- Test
		. Modules are self-descibing
			o Implement
			- Test
		*. MBox module
			*- Implement
			*- Test
	*- Server
		- Main loop for server
		- Startup, config
		- Load keys
		o Design directory layout
	*- CLI for server
		*- Run server
		*- Generate future key/publish to dirserver

	- CLI client
		- Send a message
		- Generate a message
		- Generate a reply block
		- Read message from reply block
		- Design directory layout
	- Config
		o Infer nickname
		- Infer IP
		- Validation function for client
		- Validation function for server		
	- Clean shutdown for server

	- MMTP	
		- Code to send junk
		. Tests for all cases:
			- Junk
			- Multiple senders
			- Bad senders
			- Bad recipients
			- Hunt down leaks
			o Bad KeyID
	- External reply block format
	- End-to-end payload encryption, if we ever agree on a spec.
SPEC		- Reading messages sent to reply blocks
	- Versioning :)

FOR 0.0.2: (The first hacker release)
	- Key rotation and expiry
	- MMTP
SPEC!!		- Timeout old connections
		- Test new features
	- Very clean build process
	- RPMS
	- Key management
	- Test on other (non-redhat, non-linux) systems
	- Final license
	- Handle HUPs sensibly
SPEC!!	- Key rotation
SPEC	- Publishing to directory servers
SPEC	- Downloading from directory servers
	- Basic HOWTO and documentation

FOR 0.0.3: (First non-guru release)
	- MMTP
SPEC		- Renegotiate connections
SPEC		- Session managment and resumption (security issues?)
SPEC!!	- Path selection
SPEC!!	- SMTP module
	- Good user documentation
SPEC!!	- Link padding
SPEC!!	- Dummy messages
SPEC	- Directory services
SPEC	- Automated key rotation, server management

WHEN WE GET THE CHANCE:
	- NSS or GNUTLS or MyCrypt or M2Crypto? (for a GPL-compatible license)
	- GUI
	- Multithreaded design to scale to multiple CPUs
	- Password protection for private keys.
	- Memlockall wrapper
	- Generic secure delete
	- Works on windows, mac
	- Support for loopback fs automation and shredding.

NEED TO BE TESTED
- Signals

NEED TO BE DOCUMENTED
- Difference between XXXX FFFF ????
- Overall design

NEEDS TO BE BENCHMARKED
- TLS for leaks
- PEM for leaks
- gen_dh for leaks
- gen_cert for leaks
