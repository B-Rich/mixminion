Legend:
SPEC!!  - Not specified
SPEC    - Spec not finalized
        - Not done
        * Top priority
        . Partially done
        o Done
        D Deferred
        X Abandoned

For a list of good beginner projects, check out HACKING.

NEEDS TO BE WRITTEN:

For 0.0.4:
        . UI
                o The error on '-P foo' should be 'path too short',
                  and not mention legs. (neruaL)
                o Better concept of too-short paths.
                o Beautify list-servers output
                o Rename 'server' to server-start; keep 'server', but
                  deprecated.
                o Better error message when path+routinginfo won't fit
                  into header.
                o Ctrl-C should just print "interrupted."
                o Change behavior on binary messages; don't dump 'em
                  to terminals.
                . DELKEYS should work. (neruaL)
                        - Test
        . Internal statistics
        	o Event log module
                o Create and use event log
                o Event log configurability
                o server-stats command
                . Test event log
                - Document log and events
                - Test use of event log
        o Security:
                o Support multiple SURB keys
                        o Better keyrings: implement
                        o Better keyrings: test
                        o Backend support: implement
                        o Backend support: test
                        o CLI support for identities
                        o Test CLI support
                        o Specify behavior
                        o Document in --help and README
                o Increase key length to 2048 bits
                        o Specify
                        o Come up with an upgrade path? 
                          (Result: drop backward compatibility.)
                        o Bump up logs
                        o Implement: Packet
                        o Implement: BuildMessage
                        o Implement: PacketHandler
                        o Test
                        	o Make old tests work
                                o Tests for BuildMessage with overflow.
                                o Tests for parsing underflow on subheads
        o Make ServerInfo more forward-compatible.
                o Skip sections completely if the version number isn't
                  recognized.
                        o Implement
                        o Test
        o Refactor configuration code.
        o Add new fields to ServerInfo:
                o Stub Secure-Configuration support
                o Stub Contact-Fingerprint support
        . MMTP
                o "IP" belongs in the MMTP part of the server descriptor.
                . self->self packets shouldn't hit the network.
                        o Implement
                        - Test
                o Don't have multiple connections to same server.
                o KEYID should be hash of signing key==hash of
                  identity key.  (Spec may be incorrect.)
                        o Implement
                        o Check expiration date on certificates
                        o Use PeerCertificateCache properly
                        - Test peercertificatecache.
                . Add support for "REJECTED" reply (receive only).
                        o Implement
                        - Test
        . "mixminion ping" command
                o Implement backend
                o Implement frontend
                - Test backend
                o Test frontend
        - Key management:
                . Ability to generate new serverdesc with old keys.
                        o Implement
                        - Test backend
                        - CLI
                . Ability to notice discrepancies between SD and
                  server configuration.
                        o Implement
                        - Test backend
                        - Integrate with frontend
                . Online key rotation
                        - Function to determine time for next rotation event.
                        o Ability to add PK to packethandler
                        o Ability to remove PK from packethandler.
                        o Ability to change TLS context for new connections.
                        - Ability to delete PK.
                        - Trigger all of the above as timed events occur.
                        - Somehow test the whole business.
                - Rudimentary directory automation (with trivial pinging)
                - Automatic key generation 

Deferred from 0.0.4:
        . UI
                . Good user error reporting strategy; use UIError uniformly.
        - Separate error/other log files. ????
        - Notice when out of disk space, die more cleanly
        - COME UP WITH A REAL TESTING STRATEGY FOR PERFORMANCE AND
           CLI'S AND MULTI-SERVER SITUATIONS.
        - Tests for packet addressed to server with bogus IP.
        - Finish port to Cygwin
        - Full statistics
                - Full statistics (ask Len what the list is.)
        - MMTP
                - Make MMTP bursty
        - Configurability
                - Put pid and lock and key and queues in different
                  places; coalesce pid and lock.
                - Make all filenames in server config relative to
                  server home, if not absolute.
        - Security:
        	- Password-protect dirserver keys
                - Client queues should be locked, and have
                  max-packets-to-send option.
        - Key mgt
                - Consider linewrap protection on server descriptors,
                  if demand warrants.  (None yet.)

Required for "1.0":
         [These features must be in place before we can take the system out
          of alpha.  We'll do a series of point releases between 0.0.1 and
          the first beta.]

        - Better CLIs
                X Add another level of CLI commands. (E.g., mixminion server
                  keygen, etc.)
                - Add a --status-fd option similar to GPG's so that
                  we can be more easily embedded.
        - Key rotation and expiry
                - Document "DELKEYS"
                - Automatic keygen as needed
                - Automatic key rotation
                - Password-protected private identity keys
                - Password-protected private link/packet keys
        - Security
                - Make createPrivateDirs gripe about group-writable parent
                  dirs
        - Performance:
                X Directory servers should cache intermediate
                  information. [Pointless for now: my laptop can validate
                  1400 descriptors in 10 seconds.]
        - Modules and module support
                - MBOX
                        - Full config validation
                        - Full boilerplate text
                - Use ESMTP as available
                - Move boilerplate into outside files.  Add a generic
                  'Boilerplate' functionality.
                - Tell ModuleManager about async code (as soon as needed)
                - Real SMTP module
                        - Abuse prevention of some undetermined kind.
                        X Support for setting 'Subject' and 'From' lines.
                        - Support for setting 'Subject' line.  (Maybe
                          content-type, too?)
                        - Support multiple exit addresses. (cc, bcc, etc.)
                          Needs to be bandwidth-limited.
                - Incoming email gateway
                        - Insert encoded packet into net.
                        - Reply to a reply block
                        - "Anonymize" is
                - Some notion of 'client modules' would be a good idea.
                - Put 'address' someplace more reasonable.
        - End-to-end issues
                - K-of-N fragmentation and reassembly
                - Make zlib bomb prevention configurable.
        - Configurability
                - Better, documented support for http proxies for
                  downloading directories.
                - Make pooling configurable and more sophisticated.
                - Make SURB logging configurable.
                - Reload configuration on SIGHUP
                - Support for one-side-only MMTP configurations.
                - Add 'ALLOW' lines to blacklist.
                . Freak out properly on missing/unpublishable IP.
                - Make listening configurable for multiple ports/ips, not
                  all of which need be published.  Perhaps allow different
                  rules for each listener. ???? Maybe not really a good idea.
                . Full validation function for client
                . Full validation function for server
                - Ability to disable directory paranoia.
        - Client support
                - Support to remove servers from imported set, or to block
                  servers from directory.
                o Check paths before reading from stdin.
                - Avoid timing distinguishability attack related to
                  check-dir, gen-path, read-from-stdin: only download
                  directory *AFTER* reading?  Strongly recommend a cron job?
                  Write the whole thing off as not-really-an-attack?
                - Some way to read a reply block *and* a message from stdin?
                - Path selection
                        - Watch out for servers that are really the
                          same server
                        - Only pick from the directory when picking
                          random servers.
                        - Notice Allow/Deny.
                        - Notice MMTP protocol versions.
                - Send message to user with known public key
                - Real PKI for end-to-end encryption
        - MMTP / async
                - Timeout connections more aggressively under higher load.
                - Bandwidth throttling
                X Session management and resumption (security issues?)  Is this
                  really useful for performance?
                        X Server code to find out if clients have renegotiated.
                - Tests for all cases:
                        - Junk
                        - Retry on bogus close.
                        - Multiple senders
                        - Bad senders
                        - Bad recipients
                        - Hunt down leaks
        - Build and install process
                o Well-tested 'make install'
                - A well-tested 'make uninstall'
                - RPMS, debs, and so on
                . Make sure we run on solaris and *BSD.
                - Make the software run under cygwin
                        - Handle weirdness with directory permissions
                        - flock
                        - Installing to relative path
                - "Somebody" should do a native Windows port of the client code
                        - Build process
                        - Any C porting as necessary
                        - Signal code may need to change.
                        - Process mgt code may need to change.
                        - Some kind of substitute for /dev/urandom.
                        - Resolve as-yet-unsuspected platform dependencies
                - An init.d script.
        - Testing
                - Test on other (non-redhat, non-linux) systems
                - Tests for nickname casei.
                - Integration tests
                        - Automated tests for several servers running
                          on one machine.
                        - Tests for servers on several different
                          machines.
                - Repeatable CLI tests.
                        - For client
                        - For server
        - Directories
                - Publishing to directory servers
                        - Support
                        - Automation
                - Downloading from directory servers
                        - Support
                        - Automation
                - Autonomous directory server
                - Configurable dirserver fingerprints and URLs.
                - Support for full-blown multiple-server agreement mechanism
                - Consider linewrap protection on server descriptors,
                  if demand warrants.  (None yet.)
        - Full documentation
                - Complete docs for all code, with comments and examples.
                - Write guide for module developers
                - Write complete user's manual
                - Complete all other docs
                - History.
        - Cosmetic changes
                - Perhaps "SMTP" should be renamed to "MAIL".

Unspecified:
        [We don't have any specification for this functionality, or any
         mandate to include it in 1.0.  If it's specified before 1.0 is
         done, however, it should go in.]

        - Generate link padding
        - Generate dummy messages
        - IPv6 support.
        - Support for multiple directory servers
        - Notice active attacks and block IPs dynamically.

WHEN WE GET THE CHANCE:
        [This stuff could be for any version 1.0 or later; it's not a
         requirement for 1.0.]
        - License-friendliness:
                - Switch from OpenSSL to NSS or GNUTLS
        - GUI
        . Multithreaded design to scale to multiple CPUs
        - Security
                - Memlockall wrapper
                o Generic secure delete
                - Support for loopback fs automation and shredding.
        - Portability
                - Server running on windows.
        - Time the rest of the system
        - Make DB module choice configurable?
        - Consider dropping support for older Python versions?

NEED TO BE TESTED
- Signals      

NEED TO BE DOCUMENTED

NEEDS TO BE BENCHMARKED
- TLS for leaks
- PEM for leaks
- gen_dh for leaks
- gen_cert for leaks

-----------
(for emacs)
  Local Variables:
  mode:text
  indent-tabs-mode:nil
  End:
