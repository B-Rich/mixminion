Legend:
SPEC!!	- Not specified
SPEC	- Spec not finalized
	- Not done
	* Top priority
	. Partially done
	o Done
	X Abandoned

NEEDS TO BE WRITTEN

FOR 0.0.1: (The first alpha)
	[Requirements: hackers can use this system to try sending messages
         around.  At least one delivery method works.  The code may be
         DOS'able, but must not have remote exploits.  Dirservers need not
         work.  There need not be an interface for replies.  Key rotation
         need not be automated.]

	- MMTP
		- Is it okay to just bind 127.0.0.1?
	*. MBox module
		o Implement
		*- Test
	*. Server
		*. Startup, config
		- Hardwired code to drop undeliverable messages
		- Unit test for keyset and various queues.
		- Better debugging logs
		- Test code to start 3 or 4 servers on one machine and
                  try sending some messages through.
	- Add traceback-dumping functionality to Log class. 
	  (When did traceback.py get added to Python?)
	- Better log messages at all points throughout system.
	- createPrivateDir
	       	- Warn about group-writable parent dirs
		- Refactor 'create' and 'check' code.
		- Test normal cases
		- Test failing cases
	*- CLI for server
		*- Run server
		*- Generate future key/publish to dirserver
	- CLI client
		- Send a message
		- Generate a message
		- Design directory layout
	- Config
		o Infer nickname
		- Stub validation function for client
		- Stub validation function for server		
		- Example config
		- Warn about unimplemented allow/deny
	- Build
		- Ability to pull and build ssl.
		- Marginal 'make install'
	- Integration testing
		- Fake delivery module for MBOX-less testing of core
		- Automated tests for several servers running on one machine.
		- Tests for servers on several different machines.
	- Rename versions to 0.1.
	- Marginally clean shutdown for server
	- Versioning :)
	- Final license
	- Documentation
		- Contributor's guide
		- Basic HOWTO
		- Difference between XXXX FFFF ????
		- Overall design


Required for "1.0":
	 [These features must be in place before we can take the system out
          of alpha.  We'll do a series of point releases between 0.0.1 and
          the first beta.]

	- Key rotation and expiry
		- Automatic keygen as needed
		- Automatic key rotation
		- Password-protected private identity keys
		- Password-protected private link/packet keys
	- Security
		- Make createPrivateDirs gripe about group-writable parent
		  dirs
	- Server core
		- Clean shutdown
		- Good reset handling
		- Drop undeliverable messages in a sane way
	- Modules and module support
		- MBOX
			- Use async or threading to cope with blocking MTAs
			- Full config validation
			- Full boilerplate
		- Move boilerplate into outside files.  Add a generic 
		  'Boilerplate' functionality.
		- Tell ModuleManager about asyncore
		- Support for forking delivery
		- SMTP module
		- Incoming email gateway
	- Configurablity
	  	- Support for one-side-only MMTP configurations.
		- Make Mix algorithm configurable
		- Infer server IP
		- Full validation function for client
		- Full validation function for server
		- Make 'push' and 'retry' delivery rates independant and
		  module-adjustable
		- Make 'drop undeliverable' rate configurable.
		- Implement allow/deny code
	- Client support
		- Generate a reply block
		- Read message from reply block
		- Path selection
	- MMTP / async
		- Make listen options configurable (backlog, IP)
		- Code to send junk
SPEC!!		- Timeout old connections
		- Test new features
		- Renegotiate connections
		- Session managment and resumption (security issues?)
		- Tests for all cases:
			- Junk
			- Multiple senders
			- Bad senders
			- Bad recipients
			- Hunt down leaks
	- Build and install process
		- Get SSL as needed
		- Well-tested 'make install'
		- RPMS, debs, and so on
		- Make sure we run on solaris and *BSD.
		- "Somebody" should do a Windows port of the client code
	- Protocol support
		- External reply block format
		- End-to-end payload encryption, if we ever agree on a spec.
		- Reading messages sent to reply blocks
		- Correct implementation of stateless reply blocks
SPEC		- Patch to address George's 15August attack
	- Test on other (non-redhat, non-linux) systems
	- Directories
		- Implementation for directory servers
		- Publishing to directory servers
			- Support
			- Automation
		- Downloading from directory servers
			- Support
			- Automation
	- Full documentation
		- Complete docs for all code, with comments and examples.
		- Write guide for module developers
		- Write complete user's manual
		- Complete all other docs

Unspecified:
	[We don't have any specification for this functionality, or any
	 mandate to include it in 1.0.  If it's specified before 1.0 is
	 done, however, it should go in.]

	- Generate link padding
	- Generate dummy messages

WHEN WE GET THE CHANCE:
	[This stuff could be for any version 1.0 or later; it's not a
 	 requirement for 1.0.]
	- License-friendliness:
		- Switch from OpenSSL to NSS or GNUTLS
	- GUI
	- Multithreaded design to scale to multiple CPUs
	- Security
		- Memlockall wrapper
		- Generic secure delete
		- Support for loopback fs automation and shredding.
	- Portability
		- Server running on windows.
	- Time the rest of the system
	- Make DB module choice configurable?

	- ServerInfo: complete validate rules
	- Password-protected key storage
	- ModuleManager knows about async code.
	- Configurable mix times.

NEED TO BE TESTED
- Signals

NEED TO BE DOCUMENTED

NEEDS TO BE BENCHMARKED
- TLS for leaks
- PEM for leaks
- gen_dh for leaks
- gen_cert for leaks
